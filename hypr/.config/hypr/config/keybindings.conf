###################
### KEYBINDINGS ###
###################

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, T, exec, $terminal # Open the terminal
bind = $mainMod, RETURN, exec, $terminal # Open the terminal
bind = $mainMod, Q, killactive, # Kill the active window
bind = $mainMod SHIFT, Q, exit, # Exit Hyprland
bind = $mainMod, E, exec, $fileManager # Open the file manager
bind = $mainMod, F, togglefloating, # Toggle floating window
bind = ALT, SPACE, exec, ~/.config/hypr/scripts/toggle_rofi_launcher.sh # Open search menu

# `pseudo` makes the window behave like a floating window 
# but stays tiled (a hybrid state). # dwindle
bind = $mainMod, P, pseudo, # Toggle pseudo window

# `pin` Pins the window so it stays visible on all workspaces
# (like "sticky" windows in other WMs).
bind = $mainMod CTRL, P, pin, # Pin the window to all workspaces

# `togglesplit` Switches between horizontal and vertical splits forcce
# the focused container (useful for rearranging tiled windows). # dwindle
bind = $mainMod SHIFT, J, togglesplit, # Toggle split arangement

# Reload hypland
bind = $mainMod SHIFT, R, exec, ~/.config/hypr/scripts/reload_config.sh # Reload Hyprland

# Fullscreen keybinding
bind = $mainMod SHIFT, F, fullscreen # Toggle fullscreen window

# Maximize keybinding
# 0 - fullscreen (takes your entire screen)
# 1 - maximize (keeps gaps and bar(s))
bind = $mainMod, M, fullscreen, 1 # Toggle maximize window

# Settings shortcut
bind = $mainMod, I, exec, pypr toggle settings # Open settings app
bind = $mainMod SHIFT, I, exec, better-control # Open better-control

# Cycle at the workspace level 
# See https://wiki.hypr.land/Configuring/Dispatchers/#list-of-dispatchers
bind = $mainMod, L, cyclenext # Go to the next window
bind = $mainMod, H, cyclenext, prev # Go to the previous window

# Screenshot keybindings
bind = , PRINT, exec, ~/.config/rofi/applets/bin/screenshot.sh  # Open screehshot panel
bind = CTRL, PRINT, exec, hyprshot -m region -z -o ~/Pictures/Screenshots  # Take screenshot of the region
bind = SHIFT, PRINT, exec, hyprshot -m output -z -o ~/Pictures/Screenshots  # Take screenshot of an entire monitor
bind = $mainMod, PRINT, exec, hyprshot -m window -z -o ~/Pictures/Screenshots # Take screenshot of an open window

# Hyprpicker keybinding
bind = $mainMod CTRL SHIFT, P, exec, hyprpicker # Launch hyprpicker


# Lockscreen keybinding
bind = $mainMod SHIFT, L,exec, hyprlock # Lock the screen
# bindl makes the binding work even when inputs are locked
bindl  = , XF86PowerOff, exec, systemctl suspend # Suspend the system

# btop keybinding
# `btop` opens in `kitty` class; So we need dispatcher to
# forcce the custom windowrules.
# For more infor: https://wiki.hypr.land/Configuring/Dispatchers/
# bind = CTRL SHIFT, ESCAPE, exec, kitty --title btop -e btop # Launch btop++
bind = CTRL SHIFT, ESCAPE, exec, pypr toggle btop # Toggle btop
bind = CTRL SHIFT, F1, exec, pypr toggle nvtop # Toggle nvtop
bind = CTRL SHIFT, F2, exec, pypr toggle htop # Toggle nvtop
bind = CTRL SHIFT, F3, exec, pypr toggle gnome-system-monitor # Toggle system-monitor
bind = CTRL SHIFT, F4, exec, flatpak run io.missioncenter.MissionCenter # Toggle mission-center

# Yazi keybinding
# bind  = $mainMod SHIFT, E, exec, kitty --title yazi -e yazi # Launch yazi file manager
bind  = $mainMod SHIFT, E, exec, pypr toggle yazi # Toggle yazi file manager scratchpad visibility

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l # Move focus to left
bind = $mainMod, right, movefocus, r # Move focus to right
bind = $mainMod, up, movefocus, u # Move focus to up
bind = $mainMod, down, movefocus, d # Move focus to down

bind = $mainMod, K, movefocus, u # Move focus to up
bind = $mainMod, J, movefocus, d # Move focus to down

# Move floating window position
binde = $mainMod CTRL SHIFT , left,  moveactive, -50 0 # Move active window 50px to left
binde = $mainMod CTRL SHIFT , right, moveactive, 50 0 # Move active window 50px to right
binde = $mainMod CTRL SHIFT , up,    moveactive, 0 -50 # Move active window 50px to up
binde = $mainMod CTRL SHIFT , down,  moveactive, 0 50 # Move active window 50px to down

binde = $mainMod CTRL SHIFT , h,  moveactive, -50 0 # Move active window 50px to left
binde = $mainMod CTRL SHIFT , l, moveactive, 50 0# Move active window 50px to right
binde = $mainMod CTRL SHIFT , k,    moveactive, 0 -50 # Move active window 50px to up
binde = $mainMod CTRL SHIFT , j,  moveactive, 0 50# Move active window 50px to down

# Move active window
bind = $mainMod CTRL, left, movewindow, l # Move active window to left
bind = $mainMod CTRL, right, movewindow, r # Move active window to right
bind = $mainMod CTRL, up, movewindow, u # Move active window to up
bind = $mainMod CTRL, down, movewindow, d # Move active window to down

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1  # Switch to workspace 1
bind = $mainMod, 2, workspace, 2  # Switch to workspace 2
bind = $mainMod, 3, workspace, 3  # Switch to workspace 3
bind = $mainMod, 4, workspace, 4  # Switch to workspace 4
bind = $mainMod, 5, workspace, 5  # Switch to workspace 5
bind = $mainMod, 6, workspace, 6  # Switch to workspace 6
bind = $mainMod, 7, workspace, 7  # Switch to workspace 7
bind = $mainMod, 8, workspace, 8  # Switch to workspace 8
bind = $mainMod, 9, workspace, 9  # Switch to workspace 9
bind = $mainMod, 0, workspace, 10  # Switch to workspace 10

# Switch workspaces using $mainMod+Alt+Arrow keys
bind = $mainMod ALT, left, workspace, -1 # Switch to previous workspace
bind = $mainMod ALT, right, workspace, +1 # Switch to next workspace

bind = $mainMod ALT, H, workspace, e-1 # Switch to the previous existing workspace
bind = $mainMod ALT, L, workspace, e+1 # Switch to the next existing workspace


# Move window forward or backward
bind = $mainMod SHIFT ALT, left, movetoworkspace, r-1 # Move window to the previous workspace
bind = $mainMod SHIFT ALT, right, movetoworkspace, r+1  # Move window to the next workspace
bind = $mainMod SHIFT ALT, H, movetoworkspace, r-1 # Move window to the previous workspace
bind = $mainMod SHIFT ALT, L, movetoworkspace, r+1  # Move window to the next workspace

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1  # Move active window to workspace 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2  # Move active window to workspace 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3  # Move active window to workspace 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4  # Move active window to workspace 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5  # Move active window to workspace 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6  # Move active window to workspace 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7  # Move active window to workspace 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8  # Move active window to workspace 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9  # Move active window to workspace 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10  # Move active window to workspace 10

# Example special workspace (scratchpad)
# This bindings will all happen when pressing mainMod+S.
bind = $mainMod, S, togglespecialworkspace, minimize # Move the current window to/from minimize
bind = $mainMod, S, movetoworkspace, +0
bind = $mainMod, S, togglespecialworkspace, minimize
bind = $mainMod, S, movetoworkspace, special:minimize
bind = $mainMod, S, togglespecialworkspace, minimize

# Toggle special:minimize
bind = $mainMod shift, S, togglespecialworkspace, minimize # Toggle minimize workspace

bind = $mainMod, W, movetoworkspace, special:scratchpad # Move the current window to scratchpad
bind = $mainMod, W, togglespecialworkspace, scratchpad

# Toggle special:scratchpad
bind = $mainMod shift, W, togglespecialworkspace, scratchpad # Toggle scratchpad workspace

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1 # Move to next workspace
bind = $mainMod, mouse_up, workspace, e-1  # Move to previous workspace

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow # Move window
bindm = $mainMod, mouse:273, resizewindow # Resize Window

# For grouping (tabbed windows)
bind = $mainMod, G, togglegroup # Toggle group
bind = $mainMod, TAB, changegroupactive, f # Navigate to the next window of the group
bind = $mainMod SHIFT, TAB, changegroupactive, b  # Navigate to the previous window of the group
bind = $mainMod SHIFT, G, moveoutofgroup, # Move the current window out of the group
bind = $mainMod SHIFT, LEFT, moveintogroup, l # Move the window to the left group
bind = $mainMod SHIFT, RIGHT, moveintogroup, r # Move the window to the right group
bind = $mainMod SHIFT, UP, moveintogroup, u # Move the window to the up group
bind = $mainMod SHIFT, DOWN, moveintogroup, d # Move the window to the down group

# SUPER + PERIOD to open emoji panel
bind = $mainMod, period, exec, ~/.config/hypr/scripts/toggle_rofimoji.sh # Open emoji panel

# Rofi Cliphist
bind = $mainMod, V, exec, ~/.config/hypr/scripts/toggle_rofi_cliphist.sh # Open cliphist panel
# bind = SUPER, V, exec, kitty --class clipse -e clipse # Open clipse menu
# bind = SUPER, V, exec, clipse-gui # Open clipse gui menu

# Rofi menues
bind = $mainMod ALT, P, exec, ~/.config/rofi/applets/bin/powermenu.sh # Open rofi powermenu
bind = $mainMod ALT, A, exec, ~/.config/rofi/applets/bin/apps.sh # Open rofi favourite apps
bind = $mainMod ALT, Q, exec, ~/.config/rofi/applets/bin/quicklinks.sh # Open rofi quicklinks
bind = $mainMod ALT, B, exec, ~/.config/rofi/applets/bin/battery.sh # Open rofi battery menu
bind = $mainMod ALT, V, exec, ~/.config/rofi/applets/bin/volume.sh # Open rofi volume control
bind = $mainMod CTRL, B, exec, ~/.config/rofi/applets/bin/brightness.sh # Open rofi brightness control
bind = $mainMod CTRL, P, exec, ~/.config/rofi/applets/bin/player.sh # Open rofi player control
bind = $mainMod SHIFT, P, exec, ~/.config/rofi/powermenu/run.sh # Open rofi powermenu

# Rofi window menu
bind = ALT, TAB, exec, ~/.config/rofi/windows/run.sh # Open rofi list of windows menu

# Waypaper
bind = $mainMod ALT, W, exec, waypaper # Open waypaper

# Restore waypaper (reload hyprland, spicetify, and ... as the matugen post_command)
bind = $mainMod, R, exec, waypaper --restore # Restore waypaper and matugen
# bind = $mainMod, R, exec, hyprpanel -q;hyprpanel

bind = $mainMod, N, exec, swaync-client -t -sw # Open swaync notification

# Hyprpanel
# See https://hyprpanel.com/configuration/cli.html#toggling-hiding-the-bars
# To list all commands: hyprpanel explain
# bind = $mainMod, A, exec, hyprpanel t dashboardmenu
# bind = $mainMod, N, exec, hyprpanel t notificationsmenu
# bind = $mainMod SHIFT, I, exec, hyprpanel t settings-dialor
# bind = $mainMod SHIFT, C, exec, hyprpanel t calendarmenu
# bind = $mainMod SHIFT, T, exec, hyprpanel useTheme "/usr/share/hyprpanel/themes/nord.json"

# Laptop multimedia keys for volume and LCD brightness
# e at the end: allows the binding to repeat while you hold the key down
# l at the end: makes the binding work even when inputs are locked
bindel = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise # Raise the volume
bindel = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume lower # Lower the volume
bindel = ,XF86AudioMute, exec, swayosd-client --output-volume mute-toggle  # Toggle mute audio
bindel = ,XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle # Toggle mute microphone
bindel = ,XF86MonBrightnessUp, exec, swayosd-client --device intel_backlight --brightness raise # Turn the brightness up
bindel = ,XF86MonBrightnessDown, exec, swayosd-client --device intel_backlight --brightness lower # Turn the brightness down

# Capslock key
bind = CAPS, Caps_Lock, exec, swayosd-client --caps-lock # Caps-Lock
bind = Mod2, Num_Lock, exec, swayosd-client --num-lock # Num-Lock

# Requires playerctl
# o at the end: triggers on long press
bindol = , XF86AudioNext, exec, swayosd-client --playerctl next # hold the key to go to the next song
bindl = , XF86AudioNext, exec, playerctl position 5+ # Move the position of audio +5s
bindl = , XF86AudioPause, exec, swayosd-client --playerctl play-pause # Pause the audio
bindl = , XF86AudioPlay, exec, swayosd-client --playerctl play-pause # Play the audio
bindol = , XF86AudioPrev, exec, swayosd-client --playerctl prev # Hold the key to go to the previous song
bindl = , XF86AudioPrev, exec, playerctl position 5- # Move the position of audio -5s

# Calculator
bind = , XF86Calculator, exec, gnome-calculator # Launch calculator

# Resize window submaps
# See https://wiki.hypr.land/Configuring/Binds/#submaps
#
# will switch to a submap called resize
bind = ALT, R, submap, resize # Activate resize submap

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10

binde = , l, resizeactive, 10 0
binde = , h, resizeactive, -10 0
binde = , k, resizeactive, 0 -10
binde = , j, resizeactive, 0 10

# use reset to go back to the global submap
bind = , escape, submap, reset

# will reset the submap, which will return to the global submap
submap = reset

# keybinds further down will be global again...

# Show desktop
bind = $mainMod , D, exec, ~/.config/hypr/scripts/show_desktop.sh # Toggle show desktop

# Toggle special:desktop
bind = $mainMod shift, D, togglespecialworkspace, desktop # Toggle desktop workspace

# Toggle animations/blur/etc for game mode
bind = $mainMod, F1, exec, ~/.config/hypr/scripts/game_mode.sh # Toggle game mode

# Add zoom keybidings
bind = $mainMod, mouse_down, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '.float * 1.1') # Zoom into the position of the cursor
bind = $mainMod, mouse_up, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '(.float * 0.9) | if . < 1 then 1 else . end') # Zoom out of the position of the cursor

binde = $mainMod, equal, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '.float * 1.1')  # Zoom into the position of the cursor
binde = $mainMod, minus, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '(.float * 0.9) | if . < 1 then 1 else . end') # Zoom out of the position of the cursor
binde = $mainMod, KP_ADD, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '.float * 1.1') # Zoom into the position of the cursor
binde = $mainMod, KP_SUBTRACT, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor -j | jq '(.float * 0.9) | if . < 1 then 1 else . end') # Zoom out of the position of the cursor

bind = $mainMod SHIFT, mouse_up, exec, hyprctl -q keyword cursor:zoom_factor 1 # Go back to normal zoom factor
bind = $mainMod SHIFT, mouse_down, exec, hyprctl -q keyword cursor:zoom_factor 1 # Go back to normal zoom factor
bind = $mainMod SHIFT, minus, exec, hyprctl -q keyword cursor:zoom_factor 1 # Go back to normal zoom factor
bind = $mainMod SHIFT, KP_SUBTRACT, exec, hyprctl -q keyword cursor:zoom_factor 1 # Go back to normal zoom factor
bind = $mainMod SHIFT, 0, exec, hyprctl -q keyword cursor:zoom_factor 1 # Go back to normal zoom factor

# Toggle smart gaps mode
bind = $mainMod, F2, exec, ~/.config/hypr/scripts/toggle_workspace.sh # Toggle smart gaps mode

# Switch to different layouts
# dwindle: binary tree windows
# master: a main and sub windows
# See:
# https://wiki.hypr.land/Configuring/Master-Layout/
# https://wiki.hypr.land/Configuring/Dwindle-Layout/
bind = $mainMod, F3, exec, hyprctl keyword general:layout dwindle # Switch to dwindle layout
bind = $mainMod, F4, exec, hyprctl keyword general:layout master # Switch to master layout

# Hyprspace keybinding
# bind = $mainMod, O, overview:toggle # Toggle overview panel

# Open rofi keybindings
bind = $mainMod, slash, exec, ~/.config/rofi/keybindings/run.sh # Open rofi keybindings menu
bind = $mainMod SHIFT, slash, exec, ~/.config/rofi/keybindings/run.sh -o # Open rofi keybindings overview

# pyprland
bind = $mainMod, GRAVE, exec, pypr toggle terminal # Toggle popup terminal
bind = $mainMod, B, exec, ~/.config/hypr/scripts/pypr_expose.sh # Expose every window temporarily or "jump" to the fucused one
bind = $mainMod SHIFT, A, exec, pypr fetch_client_menu # Fetch window to the current workspace
bind = $mainMod, U, exec, pypr toggle_special minimized  # Toggle a window from/to the "minimized" special workspace
bind = $mainMod SHIFT, U, togglespecialworkspace, minimized  # Toggle the "minimized" special workspace
bind = $mainMod SHIFT, O, exec, pypr shift_monitors +1  # Swap workspaces between monitors

# Wordbook
bind = $mainMod SHIFT, mouse:272, exec, ydotool key 29:1 46:1 46:0 29:0;flatpak run dev.mufeed.Wordbook # Copy text and open wordbook


bind = $mainMod CTRL ALT, P, exec, pypr toggle fum # Toggle fum player
